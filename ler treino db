    ifstream database;
    database.open("treino_db.txt");

    if(database.is_open()){
        int numero_de_treinos;
        database >> numero_de_treinos;
        int codigo_treino;
        unsigned codigo_ex;
        unsigned tempo;
        unsigned numero_de_series;
        int numero_de_repeticoes;
        int numero_de_alunos;
        unsigned codigo_do_aluno;
        std::vector <Exercicio*>&selecionados;

        for(int i = 0; i < numero_de_treinos; i++){

            std::getline(ss, codigo_treino, ',');

            while (std::getline(ss,codigo_ex,','))
            {
                if ((encontrar_ex_base(codigo_ex)).get_tipo() == CARDIO)
                {
                    std::getline(ss,tempo,',');
                    ExCardio *novo = new ExCardio(encontrar_ex_base(codigo_ex),tempo);
                }
                else
                {
                    std::getline(ss,numero_de_series,',');
                    std::getline(ss,numero_de_repeticoes,',');

                    ExMusculacao *novo = new ExMusculacao(encontrar_ex_base(codigo_ex),numero_de_series,numero_de_repeticoes);
                }
                selecionados.push_back(*novo);
            }

            Treino treino() = 


            std::getline(ss,numero_de_alunos,',')

            for (int j = 0; j < numero_de_alunos; j++){
                std::getline(ss,codigo_do_aluno,',');
                encontrar_aluno(codigo_do_aluno).adcionar_treino((aluno_db.find(codigo_treino))->second);
            }
            
            

            
            

    }
